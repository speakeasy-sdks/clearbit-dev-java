/* 
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

package clearbit_dev.person_v2.models.shared;

import clearbit_dev.person_v2.utils.DateTimeDeserializer;
import clearbit_dev.person_v2.utils.DateTimeSerializer;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import java.time.OffsetDateTime;

/**
 * Person - Successful lookup, person encoded in the response body
 */
public class Person {
    /**
     * Timestamp indicating when Clearbit detected the person's email became active.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("activeAt")
    public OffsetDateTime activeAt;
    public Person withActiveAt(OffsetDateTime activeAt) {
        this.activeAt = activeAt;
        return this;
    }
    
    /**
     * The person's profile picture surfaced through their own social media accounts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("avatar")
    public String avatar;
    public Person withAvatar(String avatar) {
        this.avatar = avatar;
        return this;
    }
    
    /**
     * The person's bio surfaced through their own social media accounts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("bio")
    public String bio;
    public Person withBio(String bio) {
        this.bio = bio;
        return this;
    }
    
    /**
     * The person's email.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("email")
    public String email;
    public Person withEmail(String email) {
        this.email = email;
        return this;
    }
    
    /**
     * Indicates whether the person's email domain is associated with a free email provider (e.g., Gmail). Useful for distinguishing between personal emails and work emails.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("emailProvider")
    public Boolean emailProvider;
    public Person withEmailProvider(Boolean emailProvider) {
        this.emailProvider = emailProvider;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("employment")
    public PersonEmployment employment;
    public Person withEmployment(PersonEmployment employment) {
        this.employment = employment;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("facebook")
    public PersonFacebook facebook;
    public Person withFacebook(PersonFacebook facebook) {
        this.facebook = facebook;
        return this;
    }
    
    /**
     * Indicates whether the person's search was fuzzy or an exact match.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("fuzzy")
    public Boolean fuzzy;
    public Person withFuzzy(Boolean fuzzy) {
        this.fuzzy = fuzzy;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("geo")
    public PersonGeo geo;
    public Person withGeo(PersonGeo geo) {
        this.geo = geo;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("github")
    public PersonGithub github;
    public Person withGithub(PersonGithub github) {
        this.github = github;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("googleplus")
    public PersonGoogleplus googleplus;
    public Person withGoogleplus(PersonGoogleplus googleplus) {
        this.googleplus = googleplus;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("gravatar")
    public PersonGravatar gravatar;
    public Person withGravatar(PersonGravatar gravatar) {
        this.gravatar = gravatar;
        return this;
    }
    
    /**
     * Clearbit's internal identifier for the person.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("id")
    public String id;
    public Person withId(String id) {
        this.id = id;
        return this;
    }
    
    /**
     * Timestamp indicating when Clearbit detected the person's email became inactive.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("inactiveAt")
    public OffsetDateTime inactiveAt;
    public Person withInactiveAt(OffsetDateTime inactiveAt) {
        this.inactiveAt = inactiveAt;
        return this;
    }
    
    /**
     * Timestamp indicating when the person's record was last updated in Clearbit's database. A record update may or may not include new information about the person.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonSerialize(using = DateTimeSerializer.class)
    @JsonDeserialize(using = DateTimeDeserializer.class)
    @JsonProperty("indexedAt")
    public OffsetDateTime indexedAt;
    public Person withIndexedAt(OffsetDateTime indexedAt) {
        this.indexedAt = indexedAt;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("linkedin")
    public PersonLinkedin linkedin;
    public Person withLinkedin(PersonLinkedin linkedin) {
        this.linkedin = linkedin;
        return this;
    }
    
    /**
     * The city, state, and country where the person lives.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("location")
    public String location;
    public Person withLocation(String location) {
        this.location = location;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("name")
    public PersonName name;
    public Person withName(PersonName name) {
        this.name = name;
        return this;
    }
    
    /**
     * The person's phone number.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("phone")
    public String phone;
    public Person withPhone(String phone) {
        this.phone = phone;
        return this;
    }
    
    /**
     * The person's website surfaced through their own social media accounts.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("site")
    public String site;
    public Person withSite(String site) {
        this.site = site;
        return this;
    }
    
    /**
     * The person's time zone based on their location.
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("timeZone")
    public String timeZone;
    public Person withTimeZone(String timeZone) {
        this.timeZone = timeZone;
        return this;
    }
    
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("twitter")
    public PersonTwitter twitter;
    public Person withTwitter(PersonTwitter twitter) {
        this.twitter = twitter;
        return this;
    }
    
    /**
     * The difference in hours from the person's time zone to UTC (-12 to 14).
     */
    @JsonInclude(Include.NON_ABSENT)
    @JsonProperty("utcOffset")
    public Long utcOffset;
    public Person withUtcOffset(Long utcOffset) {
        this.utcOffset = utcOffset;
        return this;
    }
    
}
